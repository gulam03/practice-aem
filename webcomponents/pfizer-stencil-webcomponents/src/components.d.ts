/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { HelixFormWrapperSubmitEvent } from "./interfaces/form/helix-form-wrapper";
import { HelixEventPayload } from "./events/helix-event";
export { HelixFormWrapperSubmitEvent } from "./interfaces/form/helix-form-wrapper";
export { HelixEventPayload } from "./events/helix-event";
export namespace Components {
    interface HelixFormWrapper {
        /**
          * Name added to checked events for analytics
         */
        "analyticsName": string;
        /**
          * Fetch API Endpoint url.
         */
        "apiEndpointUrl": string;
        /**
          * The client environment to pass to the API.
         */
        "clientEnvironment"?: string;
        /**
          * Unique identifier for a particular form configuration.
         */
        "configToken": string;
        /**
          * Instructs the render function what to show when error is encountered
         */
        "containerVisibility": 'SHOW_ONLY_ERROR' | 'SHOW_ONLY_FORM' | 'SHOW_BOTH';
        /**
          * Comma-delimited references to stylesheet link hrefs in the page. Will try to find the stylesheets and inject into the component shadow dom.
         */
        "injectShadowStyles": string;
        /**
          * API fetch method
         */
        "method": 'GET' | 'POST';
        /**
          * Scroll the top of the form to be visible after: - 'submission'; - 'response'; - 'error' (subset of 'response'); - false (never scroll)
         */
        "scrollAfter": boolean | 'submission' | 'response' | 'error';
        /**
          * Prop to display the form always
         */
        "showFormOnSuccess": boolean;
        /**
          * Form Submission Endpoint url.
         */
        "submissionEndpointUrl": string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
}
export interface HelixFormWrapperCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLHelixFormWrapperElement;
}
declare global {
    interface HTMLHelixFormWrapperElement extends Components.HelixFormWrapper, HTMLStencilElement {
    }
    var HTMLHelixFormWrapperElement: {
        prototype: HTMLHelixFormWrapperElement;
        new (): HTMLHelixFormWrapperElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLElementTagNameMap {
        "helix-form-wrapper": HTMLHelixFormWrapperElement;
        "my-component": HTMLMyComponentElement;
    }
}
declare namespace LocalJSX {
    interface HelixFormWrapper {
        /**
          * Name added to checked events for analytics
         */
        "analyticsName"?: string;
        /**
          * Fetch API Endpoint url.
         */
        "apiEndpointUrl"?: string;
        /**
          * The client environment to pass to the API.
         */
        "clientEnvironment"?: string;
        /**
          * Unique identifier for a particular form configuration.
         */
        "configToken"?: string;
        /**
          * Instructs the render function what to show when error is encountered
         */
        "containerVisibility"?: 'SHOW_ONLY_ERROR' | 'SHOW_ONLY_FORM' | 'SHOW_BOTH';
        /**
          * Comma-delimited references to stylesheet link hrefs in the page. Will try to find the stylesheets and inject into the component shadow dom.
         */
        "injectShadowStyles"?: string;
        /**
          * API fetch method
         */
        "method"?: 'GET' | 'POST';
        /**
          * Event to be raised after successful submission of the form
         */
        "onFormSubmitted"?: (event: HelixFormWrapperCustomEvent<HelixFormWrapperSubmitEvent>) => void;
        /**
          * Emmited for Analytics tracking
         */
        "onHelixEvent"?: (event: HelixFormWrapperCustomEvent<HelixEventPayload>) => void;
        /**
          * Scroll the top of the form to be visible after: - 'submission'; - 'response'; - 'error' (subset of 'response'); - false (never scroll)
         */
        "scrollAfter"?: boolean | 'submission' | 'response' | 'error';
        /**
          * Prop to display the form always
         */
        "showFormOnSuccess"?: boolean;
        /**
          * Form Submission Endpoint url.
         */
        "submissionEndpointUrl"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface IntrinsicElements {
        "helix-form-wrapper": HelixFormWrapper;
        "my-component": MyComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "helix-form-wrapper": LocalJSX.HelixFormWrapper & JSXBase.HTMLAttributes<HTMLHelixFormWrapperElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
        }
    }
}
